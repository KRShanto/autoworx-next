// Invoice of a company.
// Note that `Invoice` is same as `Estimate`. So don't get confused.
// We can differentiate them by `type` field.
model Invoice {
    id                      String                    @id @default(cuid())
    createdAt               DateTime                  @default(now()) @map("created_at")
    updatedAt               DateTime                  @default(now()) @updatedAt @map("updated_at")
    type                    InvoiceType               @default(Invoice)
    clientId                Int?                      @map("customer_id")
    vehicleId               Int?                      @map("vehicle_id")
    subtotal                Decimal?                  @default(0) @db.Decimal(8, 2)
    discount                Decimal?                  @default(0) @db.Decimal(8, 2)
    tax                     Decimal?                  @default(0) @db.Decimal(8, 2)
    grandTotal              Decimal?                  @default(0) @map("grand_total") @db.Decimal(8, 2)
    deposit                 Decimal?                  @default(0) @db.Decimal(8, 2)
    depositNotes            String?                   @default("") @map("deposit_notes")
    depositMethod           String?                   @default("") @map("deposit_method")
    due                     Decimal?                  @default(0) @db.Decimal(8, 2)
    statusId                Int?                      @map("status_id")
    internalNotes           String?
    terms                   String?
    policy                  String?
    customerNotes           String?
    customerComments        String?
    companyId               Int                       @map("company_id")
    userId                  Int?                      @map("user_id")
    assignedToId            Int?                      @map("assigned_to")
    workOrderStatus         String?                   @default("Pending") @map("work_order_status")
    fromRequest             Boolean?                  @default(false) @map("from_request")
    fromRequestedCompanyId  Int?                      @map("from_requested_company_id")
    requestEstimateId       Int?                      @unique @map("request_estimate_id")
    columnId                Int?                      @map("column_id")
    company                 Company                   @relation(fields: [companyId], references: [id], onDelete: Cascade)
    invoiceItems            InvoiceItem[]
    photos                  InvoicePhoto[]
    tasks                   Task[]
    status                  Status?                   @relation(fields: [statusId], references: [id])
    payments                Payment[]
    user                    User?                     @relation(name: "user", fields: [userId], references: [id], onDelete: SetNull)
    Material                Material[]
    InventoryProductHistory InventoryProductHistory[]
    vehicle                 Vehicle?                  @relation(fields: [vehicleId], references: [id])
    client                  Client?                   @relation(fields: [clientId], references: [id])
    technician              Technician[]
    tags                    InvoiceTags[]
    requestEstimate         RequestEstimate?          @relation(fields: [requestEstimateId], onDelete: SetNull, references: [id])
    assignedTo              User?                     @relation(name: "assignedTo", fields: [assignedToId], references: [id], onDelete: SetNull)
    column                  Column?                   @relation(fields: [columnId], references: [id], onDelete: SetNull)

    @@index([companyId], name: "fk_invoices_company")
}

model InvoiceTags {
    id        Int      @id @default(autoincrement())
    invoiceId String   @map("invoice_id")
    tagId     Int      @map("tag_id")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
    invoice   Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
    tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)

    @@index([invoiceId], name: "fk_invoice_tags_invoice")
    @@index([tagId], name: "fk_invoice_tags_tag")
}

enum InvoiceType {
    Invoice
    Estimate
}

// Photo of a invoice.
// One invoice can have multiple photos.
model InvoicePhoto {
    id        Int      @id @default(autoincrement())
    invoiceId String   @map("invoice_id")
    photo     String   @db.VarChar(1024)
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
    invoice   Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

    @@index([invoiceId], name: "fk_invoice_photos_invoice")
}

model RequestEstimate {
    id                Int                         @id @default(autoincrement())
    senderId          Int                         @map("sender_id")
    senderCompanyId   Int                         @map("sender_company_id")
    receiverId        Int                         @map("receiver_id")
    receiverCompanyId Int                         @map("receiver_company_id")
    vehicleYear       String                      @map("vehicle_year")
    vehicleMake       String                      @map("vehicle_make")
    vehicleModel      String                      @map("vehicle_model")
    service           String
    due               DateTime
    notes             String?
    createdAt         DateTime                    @default(now()) @map("created_at")
    updatedAt         DateTime                    @default(now()) @updatedAt @map("updated_at")
    sender            User                        @relation("Sender", fields: [senderId], references: [id], onDelete: Cascade)
    receiver          User                        @relation("Receiver", fields: [receiverId], references: [id], onDelete: Cascade)
    senderCompany     Company                     @relation("SenderCompany", fields: [senderCompanyId], references: [id], onDelete: Cascade)
    receiverCompany   Company                     @relation("ReceiverCompany", fields: [receiverCompanyId], references: [id], onDelete: Cascade)
    attachments       RequestEstimateAttachment[]
    invoice           Invoice?
}

model RequestEstimateAttachment {
    id        Int             @id @default(autoincrement())
    fileName  String
    fileType  String
    fileUrl   String
    requestId Int             @map("request_id")
    createdAt DateTime        @default(now())
    updatedAt DateTime        @default(now()) @updatedAt @map("updated_at")
    request   RequestEstimate @relation(fields: [requestId], references: [id], onDelete: Cascade)
}

// Technician of a InvoiceItem.
// One InvoiceItem can have multiple technicians.
model Technician {
    id         Int       @id @default(autoincrement())
    userId     Int       @map("user_id")
    date       DateTime? @map("assigned_date")
    dateClosed DateTime? @map("date_closed")
    due        DateTime? @default(now())
    amount     Decimal?  @default(0)
    priority   Priority? @default(Low)
    status     String?
    note       String?   @map("new_note")
    serviceId  Int       @map("service_id")
    invoiceId  String    @map("invoice_id")
    companyId  Int       @map("company_id")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    service Service? @relation(fields: [serviceId], references: [id], onDelete: Cascade)
    invoice Invoice? @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
    company Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
}
